<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Document</title>
	<script crossorigin src="https://cdn.jsdelivr.net/npm/react@18/umd/react.development.js"></script>
<script crossorigin src="https://cdn.jsdelivr.net/npm/react-dom@18/umd/react-dom.development.js"></script>
</head>
<body>
	<div id="root">
		this is dom heading
	</div>
</body>
<script src="https://cdn.jsdelivr.net/npm/@babel/standalone/babel.min.js"></script>

<script type="text/babel">
	let root  = ReactDOM.createRoot(document.getElementById("root"));
	function Fetch(){

		let [data,setData] = React.useState({items:[],loading:false,error:null})
        async function fetchData(){
          setData({...data,loading:true});
		  try{
			let res = await fetch("https://fakestoreapi.com/products");
			let dat = await res.json();
			setData({...data,items:dat,loading:false})
             setTimeout(() => {
  console.log(data);
}, 4000);

		  }catch(err){
			setData({...data,error:err.message})
		  }

		}
		return(
			<>
  <button onClick={fetchData} style={{padding:"20px",borderRadius:"20px",margin:"20px",marginLeft:"50%"}}>Load Products</button>

  {data.loading && <h3>Loading........</h3>}
  {data.error && <h4>{data.error}</h4>}

  {/* Outer grid container for all items */}
  <div
    style={{
      width: "90%",
      margin: "auto",
      display: "grid",
      gridTemplateColumns: "repeat(auto-fill, minmax(200px, 1fr))",
      gap: "20px",
      border: "2px solid"
    }}
  >
    {/* Individual product card */}
    {data.items &&
      data.items.map((ele, idx) => (
        <div
          key={idx}
          style={{
            padding: "10px",
            border: "1px solid #ccc",
            borderRadius: "8px",
            textAlign: "center"
          }}
        >
          <img src={ele.image} alt="" width="100px" />
          <h5 style={{ wordBreak: "break-word" }}>Title: {ele.title}</h5>
          <p><b>Price: {ele.price}</b></p>
        </div>
      ))}
  </div>
</>

		)
	}
  root.render(<Fetch/>)
</script>


</html>
